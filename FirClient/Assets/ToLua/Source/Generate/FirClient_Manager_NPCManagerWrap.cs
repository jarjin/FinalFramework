//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FirClient_Manager_NPCManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FirClient.Manager.NPCManager), typeof(FirClient.Manager.BaseManager));
		L.RegFunction("AddNpc", new LuaCSFunction(AddNpc));
		L.RegFunction("GetNpc", new LuaCSFunction(GetNpc));
		L.RegFunction("RemoveNpc", new LuaCSFunction(RemoveNpc));
		L.RegFunction("GetCurrentNpc", new LuaCSFunction(GetCurrentNpc));
		L.RegFunction("New", new LuaCSFunction(_CreateFirClient_Manager_NPCManager));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("Current", new LuaCSFunction(get_Current), new LuaCSFunction(set_Current));
		L.RegVar("Npcs", new LuaCSFunction(get_Npcs), null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFirClient_Manager_NPCManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FirClient.Manager.NPCManager obj = new FirClient.Manager.NPCManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FirClient.Manager.NPCManager.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddNpc(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FirClient.Manager.NPCManager obj = (FirClient.Manager.NPCManager)ToLua.CheckObject<FirClient.Manager.NPCManager>(L, 1);
			long arg0 = LuaDLL.tolua_checkint64(L, 2);
			INPCView arg1 = (INPCView)ToLua.CheckObject<INPCView>(L, 3);
			obj.AddNpc(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetNpc(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FirClient.Manager.NPCManager obj = (FirClient.Manager.NPCManager)ToLua.CheckObject<FirClient.Manager.NPCManager>(L, 1);
			long arg0 = LuaDLL.tolua_checkint64(L, 2);
			INPCView o = obj.GetNpc(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveNpc(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FirClient.Manager.NPCManager obj = (FirClient.Manager.NPCManager)ToLua.CheckObject<FirClient.Manager.NPCManager>(L, 1);
			long arg0 = LuaDLL.tolua_checkint64(L, 2);
			obj.RemoveNpc(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCurrentNpc(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FirClient.Manager.NPCManager obj = (FirClient.Manager.NPCManager)ToLua.CheckObject<FirClient.Manager.NPCManager>(L, 1);
			INPCView o = obj.GetCurrentNpc();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Current(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FirClient.Manager.NPCManager obj = (FirClient.Manager.NPCManager)o;
			long ret = obj.Current;
			LuaDLL.tolua_pushint64(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Current on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Npcs(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FirClient.Manager.NPCManager obj = (FirClient.Manager.NPCManager)o;
			System.Collections.Generic.Dictionary<long,INPCView> ret = obj.Npcs;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Npcs on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Current(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FirClient.Manager.NPCManager obj = (FirClient.Manager.NPCManager)o;
			long arg0 = LuaDLL.tolua_checkint64(L, 2);
			obj.Current = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Current on a nil value");
		}
	}
}

