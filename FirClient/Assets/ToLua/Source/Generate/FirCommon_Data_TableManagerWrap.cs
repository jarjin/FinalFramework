//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FirCommon_Data_TableManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FirCommon.Data.TableManager), typeof(BaseObject));
		L.RegFunction("Create", new LuaCSFunction(Create));
		L.RegFunction("Initialize", new LuaCSFunction(Initialize));
		L.RegFunction("LoadTables", new LuaCSFunction(LoadTables));
		L.RegFunction("OnUpdate", new LuaCSFunction(OnUpdate));
		L.RegFunction("OnDispose", new LuaCSFunction(OnDispose));
		L.RegFunction("New", new LuaCSFunction(_CreateFirCommon_Data_TableManager));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("npcTable", new LuaCSFunction(get_npcTable), new LuaCSFunction(set_npcTable));
		L.RegVar("objectPoolTable", new LuaCSFunction(get_objectPoolTable), new LuaCSFunction(set_objectPoolTable));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFirCommon_Data_TableManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FirCommon.Data.TableManager obj = new FirCommon.Data.TableManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FirCommon.Data.TableManager.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Create(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			FirCommon.Data.TableManager o = FirCommon.Data.TableManager.Create();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Initialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FirCommon.Data.TableManager obj = (FirCommon.Data.TableManager)ToLua.CheckObject<FirCommon.Data.TableManager>(L, 1);
			obj.Initialize();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadTables(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FirCommon.Data.TableManager obj = (FirCommon.Data.TableManager)ToLua.CheckObject<FirCommon.Data.TableManager>(L, 1);
			obj.LoadTables();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FirCommon.Data.TableManager obj = (FirCommon.Data.TableManager)ToLua.CheckObject<FirCommon.Data.TableManager>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.OnUpdate(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FirCommon.Data.TableManager obj = (FirCommon.Data.TableManager)ToLua.CheckObject<FirCommon.Data.TableManager>(L, 1);
			obj.OnDispose();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_npcTable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FirCommon.Data.TableManager obj = (FirCommon.Data.TableManager)o;
			FirCommon.Data.NpcTable ret = obj.npcTable;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index npcTable on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_objectPoolTable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FirCommon.Data.TableManager obj = (FirCommon.Data.TableManager)o;
			FirCommon.Data.ObjectPoolTable ret = obj.objectPoolTable;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index objectPoolTable on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_npcTable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FirCommon.Data.TableManager obj = (FirCommon.Data.TableManager)o;
			FirCommon.Data.NpcTable arg0 = (FirCommon.Data.NpcTable)ToLua.CheckObject<FirCommon.Data.NpcTable>(L, 2);
			obj.npcTable = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index npcTable on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_objectPoolTable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FirCommon.Data.TableManager obj = (FirCommon.Data.TableManager)o;
			FirCommon.Data.ObjectPoolTable arg0 = (FirCommon.Data.ObjectPoolTable)ToLua.CheckObject<FirCommon.Data.ObjectPoolTable>(L, 2);
			obj.objectPoolTable = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index objectPoolTable on a nil value");
		}
	}
}

