//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FirClient_Utility_LuaHelperWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("LuaHelper");
		L.RegFunction("GetVersionInfo", new LuaCSFunction(GetVersionInfo));
		L.RegFunction("AddButtonClick", new LuaCSFunction(AddButtonClick));
		L.RegFunction("RemoveButtonClick", new LuaCSFunction(RemoveButtonClick));
		L.RegFunction("LoadLevel", new LuaCSFunction(LoadLevel));
		L.RegFunction("CallAction", new LuaCSFunction(CallAction));
		L.RegFunction("InitBeginPlay", new LuaCSFunction(InitBeginPlay));
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetVersionInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = FirClient.Utility.LuaHelper.GetVersionInfo();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddButtonClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.UI.Button arg0 = (UnityEngine.UI.Button)ToLua.CheckObject<UnityEngine.UI.Button>(L, 1);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
			FirClient.Utility.LuaHelper.AddButtonClick(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveButtonClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.UI.Button arg0 = (UnityEngine.UI.Button)ToLua.CheckObject<UnityEngine.UI.Button>(L, 1);
			FirClient.Utility.LuaHelper.RemoveButtonClick(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadLevel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			FirClient.Data.LevelType arg0 = (FirClient.Data.LevelType)ToLua.CheckObject(L, 1, TypeTraits<FirClient.Data.LevelType>.type);
			LuaTable arg1 = ToLua.CheckLuaTable(L, 2);
			LuaFunction arg2 = ToLua.CheckLuaFunction(L, 3);
			LuaFunction arg3 = ToLua.CheckLuaFunction(L, 4);
			FirClient.Utility.LuaHelper.LoadLevel(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CallAction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 1);
			FirClient.Utility.LuaHelper.CallAction(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitBeginPlay(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			uint arg0 = (uint)LuaDLL.luaL_checkinteger(L, 1);
			FirClient.Utility.LuaHelper.InitBeginPlay(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

